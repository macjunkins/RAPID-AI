{
    "version": "2.0.0",
    "tasks": [
        {
            "label": "AI Workflow: Analyze Story",
            "type": "shell",
            "command": "${workspaceFolder}/core/scripts/ai-discovery.sh",
            "args": [
                "${input:epic}",
                "${input:story}",
                "${input:title}",
                "${workspaceFolder}/docs/discovery/story-${input:epic}-${input:story}-discovery.md"
            ],
            "group": "build",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared",
                "showReuseMessage": true,
                "clear": false
            },
            "problemMatcher": {
                "owner": "ai-workflow",
                "fileLocation": ["relative", "${workspaceFolder}"],
                "pattern": [
                    {
                        "regexp": "^‚ùå\\s+(.+)$",
                        "message": 1
                    },
                    {
                        "regexp": "^‚ö†Ô∏è\\s+(.+)$",
                        "message": 1,
                        "severity": 2
                    }
                ]
            }
        },
        {
            "label": "AI Workflow: Generate Implementation Plan",
            "type": "shell",
            "command": "${workspaceFolder}/core/scripts/ai-implementation-plan.sh",
            "args": [
                "${input:epic}",
                "${input:story}",
                "${input:title}",
                "${workspaceFolder}/docs/discovery/story-${input:epic}-${input:story}-discovery.md",
                "${workspaceFolder}/docs/plans/story-${input:epic}-${input:story}-plan.md"
            ],
            "group": "build",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared"
            }
        },
        {
            "label": "AI Workflow: Flutter Analysis",
            "type": "shell",
            "command": "${workspaceFolder}/adapters/flutter/scripts/flutter-discovery.sh",
            "args": [
                "${input:epic}",
                "${input:story}",
                "${input:title}",
                "${workspaceFolder}/docs/discovery/story-${input:epic}-${input:story}-discovery.md"
            ],
            "group": "build",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared"
            }
        },
        {
            "label": "AI Workflow: Complete Story Setup",
            "type": "shell",
            "command": "echo",
            "args": ["Complete workflow: Analysis ‚Üí Plan ‚Üí Documentation"],
            "group": "build",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared"
            },
            "dependsOrder": "sequence",
            "dependsOn": [
                "AI Workflow: Analyze Story",
                "AI Workflow: Generate Implementation Plan"
            ]
        },
        {
            "label": "Systematic: Project Analysis",
            "type": "shell",
            "command": "${workspaceFolder}/core/workflows/systematic/project-analysis.sh",
            "group": "build",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared"
            },
            "problemMatcher": {
                "owner": "systematic-workflow",
                "fileLocation": ["relative", "${workspaceFolder}"],
                "pattern": [
                    {
                        "regexp": "^‚ùå\\s+(.+)$",
                        "message": 1
                    }
                ]
            }
        },
        {
            "label": "Systematic: Quality Checklist",
            "type": "shell",
            "command": "${workspaceFolder}/core/workflows/systematic/quality-checklist.sh",
            // Explicitly specify 'interactive' mode for clarity, even though it is the script's default.
            "args": ["interactive"],
            "group": "build",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared"
            }
        },
        {
            "label": "Systematic: Generate Document",
            "type": "shell",
            "command": "${workspaceFolder}/core/workflows/systematic/document-generator.sh",
            "args": ["interactive"],
            "group": "build",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared"
            }
        },
        {
            "label": "Systematic: Generate Story Document",
            "type": "shell",
            "command": "${workspaceFolder}/core/workflows/systematic/document-generator.sh",
            "args": [
                "batch",
                "story-template",
                "story-${input:epic}-${input:story}",
                "STORY_NUMBER=${input:epic}.${input:story},STORY_TITLE=${input:title},USER_ROLE=${input:userRole},STATUS=Draft"
            ],
            "group": "build",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared"
            }
        },
        {
            "label": "Documentation: Analyze Story with Documentation",
            "detail": "Analyze story requirements and identify documentation that needs updating",
            "type": "shell",
            "command": "${workspaceFolder}/core/scripts/workflow-integration.sh",
            "args": [
                "analyze",
                "${input:epic}",
                "${input:story}",
                "${input:title}",
                "${workspaceFolder}/docs/discovery/story-${input:epic}-${input:story}-discovery.md"
            ],
            "group": "build",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared",
                "showReuseMessage": true,
                "clear": false
            },
            "problemMatcher": {
                "owner": "documentation-workflow",
                "fileLocation": ["relative", "${workspaceFolder}"],
                "pattern": [
                    {
                        "regexp": "^‚ùå\\s+(.+)$",
                        "message": 1
                    },
                    {
                        "regexp": "^üìù\\s+(.+)$",
                        "message": 1,
                        "severity": 2
                    },
                    {
                        "regexp": "^üìã\\s+Documentation\\srequired:\\s(.+)$",
                        "message": "Documentation required: $1",
                        "severity": 2
                    }
                ]
            }
        },
        {
            "label": "Documentation: Generate Implementation Plan with Documentation",
            "detail": "Generate implementation plan with integrated documentation requirements",
            "type": "shell",
            "command": "${workspaceFolder}/core/scripts/workflow-integration.sh",
            "args": [
                "plan",
                "${input:epic}",
                "${input:story}",
                "${input:title}",
                "${workspaceFolder}/docs/discovery/story-${input:epic}-${input:story}-discovery.md",
                "${workspaceFolder}/docs/plans/story-${input:epic}-${input:story}-plan.md"
            ],
            "group": "build",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared"
            },
            "problemMatcher": {
                "owner": "documentation-workflow",
                "fileLocation": ["relative", "${workspaceFolder}"],
                "pattern": [
                    {
                        "regexp": "^‚ùå\\s+(.+)$",
                        "message": 1
                    },
                    {
                        "regexp": "^üìã\\s+Documentation\\splan:\\s(.+)$",
                        "message": "Documentation plan: $1",
                        "severity": 2
                    }
                ]
            }
        },
        {
            "label": "Documentation: Verify Task Completion",
            "detail": "Verify task completion including documentation requirements",
            "type": "shell",
            "command": "${workspaceFolder}/core/scripts/task-completion-verification.sh",
            "args": [
                "${input:taskId}",
                "${workspaceFolder}/docs/stories/${input:epic}.${input:story}.${input:storySlug}.md"
            ],
            "group": "test",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared"
            },
            "problemMatcher": {
                "owner": "task-completion",
                "fileLocation": ["relative", "${workspaceFolder}"],
                "pattern": [
                    {
                        "regexp": "^üö´\\s+TASK COMPLETION BLOCKED$",
                        "message": "Task completion blocked - see output for details"
                    },
                    {
                        "regexp": "^‚ùå\\s+(.+)$",
                        "message": 1
                    },
                    {
                        "regexp": "^üìù\\s+Documentation\\sissue:\\s(.+)$",
                        "message": "Documentation issue: $1",
                        "severity": 2
                    }
                ]
            }
        },
        {
            "label": "Documentation: Complete Task with Documentation Verification",
            "detail": "Complete task with mandatory documentation verification step",
            "type": "shell",
            "command": "${workspaceFolder}/core/scripts/workflow-integration.sh",
            "args": [
                "complete",
                "${input:taskId}",
                "${workspaceFolder}/docs/stories/${input:epic}.${input:story}.${input:storySlug}.md",
                "${input:changedFiles}"
            ],
            "group": "test",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared"
            },
            "problemMatcher": {
                "owner": "documentation-workflow",
                "fileLocation": ["relative", "${workspaceFolder}"],
                "pattern": [
                    {
                        "regexp": "^‚ùå\\s+(.+)$",
                        "message": 1
                    },
                    {
                        "regexp": "^üö´\\s+Documentation\\snot\\scurrent$",
                        "message": "Documentation verification failed - documentation is not current",
                        "severity": 1
                    }
                ]
            }
        },
        {
            "label": "Documentation: Check Documentation Requirements",
            "detail": "Check what documentation needs updating based on recent changes",
            "type": "shell",
            "command": "${workspaceFolder}/core/scripts/doc-detection.sh",
            "args": ["git-diff"],
            "group": "build",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared"
            },
            "problemMatcher": {
                "owner": "documentation-detection",
                "fileLocation": ["relative", "${workspaceFolder}"],
                "pattern": [
                    {
                        "regexp": "^üìã\\s+Documentation\\srequired\\sfor:\\s(.+)$",
                        "message": "Documentation required for: $1",
                        "severity": 2
                    }
                ]
            }
        },
        {
            "label": "Documentation: Complete Story Setup with Documentation",
            "detail": "Complete workflow with documentation: Analysis ‚Üí Plan ‚Üí Documentation Verification",
            "type": "shell",
            "command": "echo",
            "args": ["Complete workflow with documentation: Analysis ‚Üí Plan ‚Üí Documentation Verification"],
            "group": "build",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared"
            },
            "dependsOrder": "sequence",
            "dependsOn": [
                "Documentation: Analyze Story with Documentation",
                "Documentation: Generate Implementation Plan with Documentation"
            ]
        },
        {
            "label": "Documentation: Quick Documentation Status Check",
            "detail": "Quick check of current documentation status for active story",
            "type": "shell",
            "command": "${workspaceFolder}/core/scripts/doc-detection.sh",
            "args": [
                "files",
                "docs/stories/${input:epic}.${input:story}.${input:storySlug}.md",
                "templates/vscode/tasks.json",
                "core/scripts/",
                "adapters/"
            ],
            "group": "build",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared"
            },
            "problemMatcher": {
                "owner": "documentation-status",
                "fileLocation": ["relative", "${workspaceFolder}"],
                "pattern": [
                    {
                        "regexp": "^üìã\\s+(.+)\\sneeds\\sdocumentation\\supdate$",
                        "message": "$1 needs documentation update",
                        "severity": 2
                    }
                ]
            }
        },
        {
            "label": "Documentation: Show Documentation Guidelines",
            "detail": "Display documentation guidelines and best practices",
            "type": "shell",
            "command": "echo",
            "args": [
                "üìö DOCUMENTATION GUIDELINES:\n\n1. User-facing changes require README updates\n2. API changes need documentation in docs/\n3. Configuration changes require example updates\n4. New features need usage examples\n5. Breaking changes must be highlighted\n\nüìã Use 'Documentation: Check Documentation Requirements' to see what needs updating"
            ],
            "group": "build",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared"
            }
        },
        {
            "label": "Documentation: Interactive Documentation Update Helper",
            "detail": "Interactive helper to guide through documentation updates",
            "type": "shell",
            "command": "${workspaceFolder}/core/scripts/workflow-integration.sh",
            "args": [
                "help",
                "${input:epic}",
                "${input:story}",
                "${input:title}"
            ],
            "group": "build",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": true,
                "panel": "shared"
            },
            "problemMatcher": {
                "owner": "documentation-helper",
                "fileLocation": ["relative", "${workspaceFolder}"],
                "pattern": [
                    {
                        "regexp": "^üìù\\s+Action\\srequired:\\s(.+)$",
                        "message": "Action required: $1",
                        "severity": 2
                    }
                ]
            }
        }
    ],
    "inputs": [
        {
            "id": "epic",
            "description": "Epic number",
            "default": "1",
            "type": "promptString"
        },
        {
            "id": "story",
            "description": "Story number",
            "default": "1",
            "type": "promptString"
        },
        {
            "id": "title",
            "description": "Story title",
            "default": "New Feature",
            "type": "promptString"
        },
        {
            "id": "userRole",
            "description": "User role (e.g., developer, user, admin)",
            "default": "developer",
            "type": "promptString"
        },
        {
            "id": "taskId",
            "description": "Task ID (e.g., 3.1 for Task 3, subtask 1)",
            "default": "1",
            "type": "promptString"
        },
        {
            "id": "storySlug",
            "description": "Story slug (lowercase, hyphenated version of title)",
            "default": "new-feature",
            "type": "promptString"
        },
        {
            "id": "changedFiles",
            "description": "Comma-separated list of changed files (optional)",
            "default": "",
            "type": "promptString"
        }
    ]
}